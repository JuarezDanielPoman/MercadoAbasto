/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ModeloTablaCliente.CeldasRenderTableCliente;
import ModeloTablaCliente.ModelTableCliente;
import ModeloTablaLectura.CeldasRenderTableLectura;
import ModeloTablaLectura.ModelTableLectura;
import ModeloTablaPuesto.ModelTablePuestoAlternativa;
import ModeloTablaPuesto.CeldasRenderTablePuestoAlternativo;
import javax.swing.JOptionPane;
import mercadoabasto.exepciones.*;
import mercadoabasto.mercado.*;
import Filtrado.Filtrado;
import java.awt.Dimension;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableRowSorter;
import mercadoabasto.clientes.Cliente;


public class AgregarFactura extends javax.swing.JInternalFrame {

    private Mercado mercado;
    private TableRowSorter trsFiltroClientes;
    private TableRowSorter trsFiltroLecturas;
    private ModelTableCliente modeloTablaClientes;
    private ModelTablePuestoAlternativa modeloTablaPuestosAlternativa;
    private ModelTableLectura modeloTablaLecturas;
    private VerFactura verFactura;
    private ArrayList<Puesto> puestos;
    private ArrayList<Contrato> contratos;
    private Puesto puestoEncontrado = null;
    private Lectura lecturaEncontrada = null;
    private Contrato contratoEncontrado = null;
    
    public AgregarFactura(Mercado mercado) {
        super("Nueva factura");
        initComponents();
        this.mercado=mercado;
        
        //Modelo Tabla Clientes
        modeloTablaClientes = new ModelTableCliente();
        tablaClientes.setModel(modeloTablaClientes);
        trsFiltroClientes = new TableRowSorter(tablaClientes.getModel());
        tablaClientes.setRowSorter(trsFiltroClientes);
        tablaClientes.setDefaultRenderer(Object.class , new CeldasRenderTableCliente());
       
        
        //Modelo Tabla Puestos
        modeloTablaPuestosAlternativa = new ModelTablePuestoAlternativa();
        tablaPuestos.setModel(modeloTablaPuestosAlternativa);
        tablaPuestos.setDefaultRenderer(Object.class, new CeldasRenderTablePuestoAlternativo());
        
        //Modelo Tabla Lecturas
        modeloTablaLecturas = new ModelTableLectura();
        tablaLecturas.setModel(modeloTablaLecturas);
        trsFiltroLecturas = new TableRowSorter(tablaLecturas.getModel());
        tablaLecturas.setRowSorter(trsFiltroLecturas);
        tablaLecturas.setDefaultRenderer(Object.class, new CeldasRenderTableLectura());
        
        //Listener para filtrar tabla de clientes
        txtBusquedaClientes.addKeyListener(new KeyAdapter(){
                @Override
                public void keyReleased(final KeyEvent e){
                    Filtrado.filtrarClientesPorCuilCuit(txtBusquedaClientes, trsFiltroClientes);
                    puestoEncontrado = null;
                    contratoEncontrado = null;
                    modeloTablaPuestosAlternativa.limpiarTabla();
                    modeloTablaLecturas.limpiarTabla();
                }
            });
        
        try {
            modeloTablaClientes.limpiarTabla();
            modeloTablaClientes.cargarDatosDeClientes(this.mercado.obtenerClienteContratoVigente());
        } catch (ClienteInexistenteException ex) {
            JOptionPane.showMessageDialog(null, "NO HAY CLIENTES CON CONTRATOS ACTIVOS");
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtBusquedaClientes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaLecturas = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnVerFactura = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaPuestos = new javax.swing.JTable();
        JMontCh = new com.toedter.calendar.JMonthChooser();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        btnBuscar = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Clientes");

        jLabel2.setText("Busqueda:");

        tablaLecturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaLecturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaLecturasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaLecturas);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Puestos");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Lecturas");

        btnVerFactura.setText("Ver factura");
        btnVerFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerFacturaActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        tablaPuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPuestos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPuestosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaPuestos);

        btnBuscar.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusquedaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVerFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(JMontCh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtBusquedaClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(JMontCh, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                            .addComponent(jYearChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(btnVerFactura))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnVerFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerFacturaActionPerformed
    
        
        if(contratoEncontrado != null && lecturaEncontrada != null){
            if(verFactura == null || verFactura.isClosed()){
                verFactura = new VerFactura(this.mercado, contratoEncontrado, lecturaEncontrada);
                MenuPrincipal.PanelEscritorio.add(verFactura);
                Dimension desktopSize =  MenuPrincipal.PanelEscritorio.getSize();
                Dimension FrameSize = verFactura.getSize();
                verFactura.setLocation((desktopSize.width - FrameSize.width)/2, (desktopSize.height- FrameSize.height)/2);  
                verFactura.show();
            } else {
                JOptionPane.showMessageDialog(null, "Ya se encuentra activa una ventana para ver factura");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar elementos de las listas para ver la factura");
        }
    }//GEN-LAST:event_btnVerFacturaActionPerformed

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        //obtiene cuil o cuit
        try{
            //selecciona el cliente, busca el objeto cliente, con el cliente encontrado busca los puestos 
            //y los contratos
            String clave = tablaClientes.getValueAt(tablaClientes.getSelectedRow(),ModelTableCliente.CUILCUIT).toString();
           
            Cliente clienteEncontrado = this.mercado.buscarCliente(clave);
            modeloTablaLecturas.limpiarTabla();
            modeloTablaPuestosAlternativa.limpiarTabla();
            puestos = this.mercado.obtenerPuestosDeCliente(clienteEncontrado);
            contratos = this.mercado.obtenerContratosDeCliente(clienteEncontrado);
            modeloTablaPuestosAlternativa.cargarDatosDeClientes(puestos);
            puestoEncontrado = null;
            contratoEncontrado = null;
        } catch (ClienteInexistenteException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (ClienteSinContratosException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void tablaPuestosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPuestosMouseClicked
        try {
            //selecciona el puesto, busca el objeto puesto, con el puesto busca el contrato en
            //los contratos encontrados anteriormente
            modeloTablaLecturas.limpiarTabla();
            Integer numeroPuesto = (Integer)modeloTablaPuestosAlternativa.getValueAt(tablaPuestos.getSelectedRow(), ModelTablePuestoAlternativa.PUESTO);
            String nombreSector = (String)modeloTablaPuestosAlternativa.getValueAt(tablaPuestos.getSelectedRow(), ModelTablePuestoAlternativa.SECTOR);
            Sector sectorEncontrado = this.mercado.buscarUnSector(nombreSector);
            puestoEncontrado = sectorEncontrado.obtenerUnPuesto(numeroPuesto);
            contratoEncontrado = this.mercado.buscarContratoPorPuesto(contratos, puestoEncontrado);
            modeloTablaLecturas.cargarDatosLectura(puestoEncontrado.getMedidor().getLecturas());
            lecturaEncontrada = null;
        } catch (SectorInexistenteException ex) {
            JOptionPane.showInternalMessageDialog(null, ex.getMessage());
        } catch (PuestoInexistenteException ex) {
            JOptionPane.showInternalMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_tablaPuestosMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(puestoEncontrado != null){
            try {
                modeloTablaLecturas.limpiarTabla();
                Lectura lecturaEncontrada = this.puestoEncontrado.getMedidor().buscarUnaLectura(JMontCh.getMonth()+1, jYearChooser1.getYear());
                modeloTablaLecturas.cargarDatosLectura(lecturaEncontrada);
            } catch (LecturaInexistenteExeption ex) {
                JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR PUESTO PARA PODER BUSCAR UNA LECTURA");
            }
        } else {
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR PUESTO PARA PODER BUSCAR UNA LECTURA");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaLecturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLecturasMouseClicked
        try {
            //selecciona el periodo de la lectura, lo convierte a LocalDate y busca el objeto lectura
            String periodoTabla = (String) modeloTablaLecturas.getValueAt(tablaLecturas.getSelectedRow(), ModelTableLectura.PERIODOLECTURA);
            LocalDate periodoABuscar = LocalDate.parse(periodoTabla, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
            lecturaEncontrada = puestoEncontrado.getMedidor().buscarUnaLectura(periodoABuscar.getMonthValue(), periodoABuscar.getYear());
        } catch (LecturaInexistenteExeption ex) {
            JOptionPane.showInternalMessageDialog(null, ex.getMessage());
        }
        
    }//GEN-LAST:event_tablaLecturasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JMonthChooser JMontCh;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnVerFactura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTable tablaLecturas;
    private javax.swing.JTable tablaPuestos;
    private javax.swing.JTextField txtBusquedaClientes;
    // End of variables declaration//GEN-END:variables
}
